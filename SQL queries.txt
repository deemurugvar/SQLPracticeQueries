***********************
Table - Authors
***********************
CREATE TABLE Authors (
  author_id INTEGER PRIMARY KEY,
  Name varchar(50) NOT NULL,
  country varchar(50) NOT NULL
);

-- insert
INSERT INTO Authors VALUES (1, 'J.K. Rowling', 'UK');
INSERT INTO Authors VALUES (2, 'George R.R. Martin', 'USA');
INSERT INTO Authors VALUES (3, 'Haruki Murakami', 'Japan');

-- fetch 
SELECT * FROM Authors;

***********************
Table - Books
***********************

CREATE TABLE Books (
  book_id INTEGER PRIMARY KEY,
  Title varchar(50) NOT NULL,
  genre varchar(50) NOT NULL,
  price float(30,2) NOT NULL,
  author_id INTEGER,
  FOREIGN KEY (author_id) REFERENCES Authors(author_id)
);

INSERT INTO Books VALUES (1, 'Harry Potter', 'Fantasy',20.99,1);
INSERT INTO Books VALUES (2, 'Game of Thrones', 'Fantasy',25.99,2);
INSERT INTO Books VALUES (3, 'Norwegian Wood', 'Fiction', 15.49,3);

select * from Books;

***************************
Table - Customers
**************************
CREATE TABLE Customers (
  customer_id INTEGER PRIMARY KEY,
  name varchar(50) NOT NULL,
  Email varchar(150) NOT NULL
);

INSERT INTO Customers VALUES (1, 'Ram', 'ram@gmail.com');
INSERT INTO Customers VALUES (2, 'Nivetha', 'nivetha@gmail.com');
INSERT INTO Customers VALUES (3, 'Deva', 'deva@hotmail.com');

select * from Customers;
***************************
Table - Orders
**************************

CREATE TABLE Orders (
  order_id INTEGER PRIMARY KEY,
  customer_id INTEGER NOT NULL,
  order_date DATE NOT NULL,
  FOREIGN KEY (customer_id) REFERENCES Customers(customer_id)
);

INSERT INTO Orders VALUES (1, 1, '2023-12-01');
INSERT INTO Orders VALUES (2, 2, '2023-12-02');

select * from Orders;

***************************
Table - Order Details
**************************

CREATE TABLE Order_Details (
  order_detail_id INTEGER PRIMARY KEY,
  order_id INTEGER,
  book_id INTEGER NOT NULL,
  quantity INTEGER NOT NULL,
  FOREIGN KEY (order_id) REFERENCES Orders(order_id)
);

INSERT INTO Order_Details VALUES (1, 1, 1,2);
INSERT INTO Order_Details VALUES (2,2,2,1);
INSERT INTO Order_Details VALUES (3,2,3,1);

select * from Order_Details;

********************************************************************
Query 1 JOINS
***************************************************************
SELECT 
    o.order_id,
    c.name AS customer_name,
    b.title AS book_title
FROM 
    Orders o
JOIN Customers c ON o.customer_id = c.customer_id
JOIN Order_Details od ON o.order_id = od.order_detail_id
JOIN Books b ON od.book_id = b.book_id;

************************************************************************
Query 2 JOINS
********************************************
SELECT 
    a.name AS author_name,
    SUM(b.price * od.quantity) AS total_revenue
FROM 
    Authors a
JOIN Books b ON a.author_id = b.author_id
JOIN Order_Details od ON b.book_id = od.book_id
GROUP BY 
    a.name
ORDER BY 
    total_revenue DESC;
*****************************************************************
SUBQUERIES - Query 1
*************************************************************
SELECT 
    a.name AS author_name,
    b.title AS book_title,
    b.price
FROM 
    Books b
JOIN Authors a ON b.author_id = a.author_id
WHERE 
    b.price = (
        SELECT MAX(price) FROM Books
    );
***************************************************************
SUBQUERIES - Query 2
**************************************************

SELECT 
    c.name AS customer_name
FROM 
    Customers c
WHERE 
    (
        SELECT COUNT(DISTINCT b.genre)
        FROM Orders o
        JOIN Order_Details od ON o.order_id = od.order_id
        JOIN Books b ON od.book_id = b.book_id
        WHERE o.customer_id = c.customer_id
    ) > 1;


